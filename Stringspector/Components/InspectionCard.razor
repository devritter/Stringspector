@using Stringspector.Inspectors
@{
    var linesAsString = _results.FirstOrDefault(x => x.Header == "Lines")?.Body ?? "2";
    var lines = int.Parse(linesAsString).Clamp(null, 10);
}

<Card>
    <textarea readonly style="width: 100%" rows="@lines">@Text</textarea>
    <div class="inspection-results">
        @foreach (var item in _results)
        {
            <InspectionResultRenderer Result="item"/>
        }
    </div>
</Card>

@code {
    List<InspectionResult> _results = new();

    [Parameter] public required string Text { get; set; }

    protected override void OnParametersSet()
    {
        _results.Clear();
        _results.AddRange(new StringInspector().Inspect(Text));
        _results.AddRange(new NumberInspector().Inspect(Text));
        _results.AddRange(new MagicNumbersInspector().Inspect(Text));
        _results.AddRange(new ItemsInspector().Inspect(Text));
        _results.AddRange(new DecodingInspector().Inspect(Text));
        base.OnParametersSet();
    }

}